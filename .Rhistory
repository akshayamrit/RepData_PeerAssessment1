library(devtools)
install.packages("slidify")
search()
install_github("slidify","ramnathv")
install_github("slidify","ramnathv")
install_github(slidify','ramnathv')
install_github('slidify','ramnathv')
library(devtools)
pkgs <- c('ramnathv/slidifyLibraries', 'ramnathv/slidify')
devtools::install_github(pkgs)
search()
library(slidify)
install.packages("ggplot2")
source("http://bioconductor.org/biocLite.R")
install.packages("BiocManager")
BiocManager::install()
BiocManager::available()
BiocManager::install(c("GenomicFeatures", "AnnotationDbi"))
library(ggplot2)
search()
find.package("devtools")
library(devtools)
find_rtools()
find.package("KernSmooth")
library(KernSmooth)
clear()
m <- matrix(rnorm(25,10), nrow = 5,ncol = 5)
m
solve(m)
library("matlib")
library(matlib)
install.packages("matlib")
matlib::inv(m) == solve(m)
matlib::inv(m)
solve(m)
library(xlsx)
fun(libname, pkgname)
library(openxlsx)
library(xlsx)
Sys.setenv(JAVA_HOME='C:\\Program Files\\Java\\jre1.8.0_211')
library(rJava)
find.java <- function() {
for (root in c("HLM", "HCU")) for (key in c("Software\\JavaSoft\\Java Runtime Environment",
"Software\\JavaSoft\\Java Development Kit")) {
hive <- try(utils::readRegistry(key, root, 2),
silent = TRUE)
if (!inherits(hive, "try-error"))
return(hive)
}
hive
}
find.java()
Sys.setenv(JAVA_HOME='C:\\Program Files (x86)\\Java\\jre1.8.0_211')
find.java()
Sys.setenv(JAVA_HOME="C:\Program Files (x86)\Java\jre1.8.0_211")
Sys.setenv(JAVA_HOME="C:\\Program Files (x86)\\Java\\jre1.8.0_211")
find.java()
find.java <- function() {
for (root in c("HLM", "HCU")) for (key in c("Software\\JavaSoft\\Java Runtime Environment",
"Software\\JavaSoft\\Java Development Kit")) {
hive <- try(utils::readRegistry(key, root, 2),
silent = TRUE)
if (!inherits(hive, "try-error"))
return(hive)
}
hive
}
find.java()
Sys.setenv(JAVA_HOME='C:\\Program Files (x86)\\Java\\jre1.8.0_211')
find.java()
library(datasets)
hist(airquality$Ozone)
?bg
??bg
library(datasets)
with(airquality, plot(Wind,Ozone))
title(main = "Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone, main = "Ozone and Wind in New York City"))
with(airquality, plot(Wind, Ozone, main = "Ozone and Wind in New York City"))
with(subset(airquality, Month == 5), points(Wind, Ozone, col = "blue"))
?with
?plot
with(airquality, plot(Wind, Ozone, main = "Ozone and Wind in New York City", type = "n"))
with(subset(airquality, Month == 5), points(Wind, Ozone, col = "blue"))
with(subset(airquality, Month != 5), points(Wind, Ozone, col = "red"))
legend("topright", pch = 1, col = c("blue", "red"), legend = c("May", "Other Months"))
setwd("~/datasciencecoursera/Reproducible Research/RepData_PeerAssessment1")
library(readr)
activity <- read_csv("activity.csv", col_types = cols(date = col_date(format = "%Y-%m-%d"),
steps = col_double()))
View(activity)
library(ggplot2)
library(dplyr)
activity.perDaySteps <- activity %>% group_by(data) %>% summarize(perDaySteps = sum(steps, na.rm = TRUE))
activity.perDaySteps <- activity %>% group_by(dat1) %>% summarize(perDaySteps = sum(steps, na.rm = TRUE))
activity.perDaySteps <- activity %>% group_by(date) %>% summarize(perDaySteps = sum(steps, na.rm = TRUE))
View(activity.perDaySteps)
g <- ggplot(data = activity.perDaySteps, aes(date, perDaySteps))
g + geom_histogram(date~perDaySteps)
g + geom_histogram(aes(date~perDaySteps))
g + geom_histogram()
g <- ggplot(data = activity.perDaySteps)
g + geom_histogram(date~perDaySteps)
g + geom_histogram(aes(date~perDaySteps))
g + geom_histogram(aes(x = date))
g + geom_bar(aes(x = date, y = perDaySteps))
g + geom_bar(aes(x = date, y = perDaySteps), stat = "identity")
g + geom_bar(aes(x = date, y = perDaySteps, color = "blue"), stat = "identity")
g + geom_bar(aes(x = date, y = perDaySteps, color = 1), stat = "identity")
g + geom_bar(aes(x = date, y = perDaySteps, fill = 1), stat = "identity")
g <- ggplot(activity.perDaySteps, aes(x = date, y = perDaySteps, fill = "blue"))
g + geom_bar(stat = "identity")
g <- ggplot(activity.perDaySteps, aes(x = date, y = perDaySteps, fill = 1))
g + geom_bar(stat = "identity")
g <- ggplot(activity.perDaySteps, aes(x = date, y = perDaySteps, fill = colors("blue")))
g + geom_bar(stat = "identity")
g <- ggplot(activity.perDaySteps, aes(x = date, y = perDaySteps, fill = 1))
g <- ggplot(activity.perDaySteps, aes(x = date, y = perDaySteps, fill = "grey"))
g + geom_bar(stat = "identity")
g <- ggplot(activity.perDaySteps, aes(x = date, y = perDaySteps))
g + geom_bar(stat = "identity", fill = "blue")
g + geom_bar(stat = "identity", fill = "blue", width = 1)
g + geom_bar(stat = "identity", fill = "blue", width = 0.75)
g + geom_bar(stat = "identity", fill = "blue", width = 0.9)
g + geom_bar(stat = "identity", fill = "blue", width = 0.)
g + geom_bar(stat = "identity", fill = "blue", width = 0.8)
g + geom_bar(stat = "identity", fill = "blue", width = 0.8) + theme_bw()
g + geom_bar(stat = "identity", fill = "blue", width = 0.8) + theme_bw() + guides(fill = FALSE)
g + geom_bar(stat = "identity", fill = "blue", width = 0.8) + theme_bw()
g + geom_bar(stat = "identity", fill = "blue", width = 0.8) + theme_bw() + guides(fill = FALSE)
g + geom_bar(stat = "identity", fill = "blue", width = 0.8) + theme_bw()
g + geom_bar(stat = "identity", fill = "blue", width = 0.8) + theme_bw() + guides(fill = FALSE) + labs(x = "Date", y = "No of Steps/Day")
g + geom_bar(stat = "identity", fill = "blue", width = 0.8) + theme_bw() + guides(fill = FALSE) + labs(x = "Date", y = "No of Steps/Day", title = "Total Number of Steps Taken Per Day")
?labs
g + geom_bar(stat = "identity", fill = "blue", width = 0.8) + theme_bw(plot.title = element_text(hjust = 0.5)) + guides(fill = FALSE) + labs(x = "Date", y = "No of Steps/Day", title = "Total Number of Steps Taken Per Day")
g + geom_bar(stat = "identity", fill = "blue", width = 0.8) + theme(plot.title = element_text(hjust = 0.5)) + guides(fill = FALSE) + labs(x = "Date", y = "No of Steps/Day", title = "Total Number of Steps Taken Per Day")
g + geom_bar(stat = "identity", fill = "blue", width = 0.8) + theme(plot.title = element_text(hjust = 0.5)) + guides(fill = FALSE) + labs(x = "Date", y = "No of Steps/Day", title = "Total Number of Steps Taken Per Day") + theme_bw()
theme_bw()
?theme_bw
g + geom_bar(stat = "identity", fill = "blue", width = 0.8) + theme(plot.title = element_text(hjust = 0.5)) + guides(fill = FALSE) + labs(x = "Date", y = "No of Steps/Day", title = "Total Number of Steps Taken Per Day")
g + geom_bar(stat = "identity", fill = "blue", width = 0.8) + theme(plot.title = element_text(hjust = 0.5))  + labs(x = "Date", y = "No of Steps/Day", title = "Total Number of Steps Taken Per Day")
g + geom_bar(stat = "identity", fill = "blue", width = 0.8) + theme(plot.title = element_text(hjust = 0.5)) + guides(fill = FALSE) + labs(x = "Date", y = "No of Steps/Day", title = "Total Number of Steps Taken Per Day")
library(ggplot2)
g <- ggplot(activity.perDaySteps, aes(x = date, y = perDaySteps))
g + geom_bar(stat = "identity", fill = "blue", width = 0.8)
+ theme(plot.title = element_text(hjust = 0.5))
g + geom_bar(stat = "identity", fill = "blue", width = 0.8) + theme(plot.title = element_text(hjust = 0.5)) + labs(x = "Date", y = "No of Steps/Day", title = "Total Number of Steps Taken Per Day")
g <- ggplot(activity.perDaySteps, aes(x = date, y = perDaySteps))
g + geom_bar(stat = "identity", fill = "blue", width = 0.8) + theme(plot.title = element_text(hjust = 0.5)) + labs(x = "Date", y = "No of Steps/Day", title = "Total Number of Steps Taken Per Day")
acivity.timeAverage <- activity %>% group_by(interval) %>% summarize(mean(steps, na.rm = TRUE))
acivity.timeAverage <- activity %>% group_by(interval) %>% summarize(avgSteps = mean(steps, na.rm = TRUE))
g <- ggplot(data = activity.perDaySteps, aes(x = interval, y = avgSteps))
g + geom_line(type = "l")
rm(acivity.timeAverage)
activity.timeAverage <- activity %>% group_by(interval) %>% summarize(avgSteps = mean(steps, na.rm = TRUE))
g <- ggplot(data = activity.timeAverage, aes(x = interval, y = avgSteps))
g + geom_line(type = "l")
g + geom_line()
g + geom_line(type = "1")
View(activity.timeAverage)
activity.timeAverage[max(activity.timeAverage$avgSteps),]
max(activity.timeAverage$avgSteps)
activity.timeAverage[activity.timeAverage$avgSteps == max(activity.timeAverage$avgSteps),]
g <- ggplot(data = activity.timeAverage, aes(x = interval, y = avgSteps))
g + geom_line()
g + geom_line()
g + geom_line() + labs(title = "Time Series Plot of 5-min Interval and Average Number of Steps", x = "Interval", y = "Average Steps") + theme(plot.title = element_text(hjust = 0.5))
g + geom_line(color = "blue") + labs(title = "Time Series Plot of 5-min Interval and Average Number of Steps", x = "Interval", y = "Average Steps") + theme(plot.title = element_text(hjust = 0.5))
activity.timeAverage[activity.timeAverage$avgSteps == max(activity.timeAverage$avgSteps),1]
g <- ggplot(data = activity.timeAverage, aes(x = interval, y = avgSteps))
g + geom_line(color = "blue") + labs(title = "Time Series Plot of 5-min Interval and Average Number of Steps", x = "Interval", y = "Average Steps") + theme(plot.title = element_text(hjust = 0.5))
suppressWarnings(library(readr))
activity <- read_csv("activity.csv", col_types = cols(date = col_date(format = "%Y-%m-%d"),steps = col_double()))
suppressWarnings(suppressMessages(library(dplyr)))
activity.perDaySteps <- activity %>% group_by(date) %>% summarize(perDaySteps = sum(steps, na.rm = TRUE))
suppressWarnings(library(ggplot2))
g <- ggplot(activity.perDaySteps, aes(x = date, y = perDaySteps))
g + geom_bar(stat = "identity", fill = "blue", width = 0.8) + theme(plot.title = element_text(hjust = 0.5)) + labs(x = "Date", y = "No of Steps/Day", title = "Total Number of Steps Taken Per Day")
mean(activity.perDaySteps$perDaySteps, na.rm = TRUE)
median(activity.perDaySteps$perDaySteps, na.rm = TRUE)
activity.timeAverage <- activity %>% group_by(interval) %>% summarize(avgSteps = mean(steps, na.rm = TRUE))
g <- ggplot(data = activity.timeAverage, aes(x = interval, y = avgSteps))
g + geom_line(color = "blue") + labs(title = "Time Series Plot of 5-min Interval and Average Number of Steps", x = "Interval", y = "Average Steps") + theme(plot.title = element_text(hjust = 0.5))
activity.timeAverage[activity.timeAverage$avgSteps == max(activity.timeAverage$avgSteps),1]
sum(is.na(activity$steps))
activity.updated <- activity %>% group_by(interval) %>% mutate(steps = if_else(is.na(steps), mean(steps, na.rm = TRUE), steps))
head(activity.updated)
activity.updated <- activity %>% group_by(interval) %>% mutate(steps = if_else(is.na(steps), mean(steps, na.rm = TRUE), steps))
head(activity.updated)
activity.updated.perDaySteps <- activity.updated %>% group_by(date) %>% summarize(perDaySteps = sum(steps, na.rm = TRUE))
g <- ggplot(activity.perDaySteps, aes(x = date, y = perDaySteps))
g + geom_bar(stat = "identity", fill = "blue", width = 0.8) + theme(plot.title = element_text(hjust = 0.5)) + labs(x = "Date", y = "No of Steps/Day", title = "Total Number of Steps Taken Per Day Using Updated Table")
activity.updated.perDaySteps <- activity.updated %>% group_by(date) %>% summarize(perDaySteps = sum(steps, na.rm = TRUE))
g <- ggplot(activity.updated.perDaySteps, aes(x = date, y = perDaySteps))
g + geom_bar(stat = "identity", fill = "blue", width = 0.8) + theme(plot.title = element_text(hjust = 0.5)) + labs(x = "Date", y = "No of Steps/Day", title = "Total Number of Steps Taken Per Day Using Updated Table")
mean(activity.updated.perDaySteps$perDaySteps, na.rm = TRUE)
median(activity.updated.perDaySteps$perDaySteps, na.rm = TRUE)
mean(activity.updated.perDaySteps$perDaySteps, na.rm = TRUE)
median(activity.updated.perDaySteps$perDaySteps, na.rm = TRUE)
weekdays.Date(activity.updated$date[4])
weekdays.Date(activity.updated$date[5])
weekdays.Date(activity.updated$date[500])
weekdays.Date(activity.updated$date[5000])
weekdays.POSIXt(activity.updated$date[4])
as.numeric(weekdays.POSIXt(activity.updated$date[4]))
format(as.Date(activity.updated.perDaySteps$date),%w)
as.POSIXlt(activity.updated.perDaySteps$date)$wday
weekdays(activity.updated.perDaySteps$date)
weekend <- c("Saturday","Sunday")
View(activity.updated)
activity.updated <- activity.updated %>% mutate(weekday = if_else(weekdays(date) %in% weekend, "weekend", "weekday"))
g <- ggplot(data = activity.updated, aes(x = interval, y = steps, color = weekday))
g + geom_line()
g + geom_line() + facet_wrap(.~weekday)
g + geom_line() + facet_wrap(weekday~.)
g + geom_line() + facet_wrap(weekday~., nrow = 2, ncol = 1)
activity.updated.avgStepsInt <- activity.updated %>% group_by(interval,weekday) %>% summarize(averageSteps = mean(steps))
g <- ggplot(data = activity.updated.avgStepsInt, aes(x = interval, y = averageSteps, color = weekday))
g + geom_point() + facet_wrap(weekday~., nrow = 2, ncol = 1)
g + geom_line() + facet_wrap(weekday~., nrow = 2, ncol = 1)
g + geom_line() + facet_wrap(weekday~., nrow = 2, ncol = 1) + labs(x = "Interval", y = "Average Number of Steps", title = "Average Number of Steps vs Interval on Weekdays") + theme(plot.title = element_text(hjust = 0.5))
weekend <- c("Saturday","Sunday")
activity.updated <- activity.updated %>% mutate(weekday = if_else(weekdays(date) %in% weekend, "weekend", "weekday"))
head(activity.updated)
activity.updated.avgStepsInt <- activity.updated %>% group_by(interval,weekday) %>% summarize(averageSteps = mean(steps))
g <- ggplot(data = activity.updated.avgStepsInt, aes(x = interval, y = averageSteps, color = weekday))
g + geom_line() + facet_wrap(weekday~., nrow = 2, ncol = 1) + labs(x = "Interval", y = "Average Number of Steps", title = "Average Number of Steps vs Interval on Weekdays") + theme(plot.title = element_text(hjust = 0.5))
activity.updated.avgStepsInt <- activity.updated %>% group_by(interval,weekday) %>% summarize(averageSteps = mean(steps))
head(activity.updated.avgStepsInt)
activity.updated.avgStepsInt <- activity.updated %>% group_by(interval,weekday) %>% summarize(averageSteps = mean(steps))
head(activity.updated.avgStepsInt)
g <- ggplot(data = activity.updated.avgStepsInt, aes(x = interval, y = averageSteps, color = weekday))
g + geom_line() + facet_wrap(weekday~., nrow = 2, ncol = 1) + labs(x = "Interval", y = "Average Number of Steps", title = "Average Number of Steps vs Interval on Weekdays") + theme(plot.title = element_text(hjust = 0.5))
mean(activity$steps, na.rm = TRUE)
View(activity)
mean(activity.perDaySteps$perDaySteps, na.rm = TRUE)
g <- ggplot(data = activity.updated.avgStepsInt, aes(x = interval, y = averageSteps, color = weekday))
g + geom_line() + facet_wrap(weekday~., nrow = 2, ncol = 1) + labs(x = "Interval", y = "Average Number of Steps", title = "Average Number of Steps vs Interval on Weekdays") + theme(plot.title = element_text(hjust = 0.5))
g + geom_line() + facet_wrap(weekday~., nrow = 2, ncol = 1) + labs(x = "Interval", y = "Average Number of Steps", title = "Average Number of Steps vs Interval on Weekdays") + theme(plot.title = element_text(hjust = 0.5))
g + geom_line(size = 3) + facet_wrap(weekday~., nrow = 2, ncol = 1) + labs(x = "Interval", y = "Average Number of Steps", title = "Average Number of Steps vs Interval on Weekdays") + theme(plot.title = element_text(hjust = 0.5))
g + geom_line(size = 2) + facet_wrap(weekday~., nrow = 2, ncol = 1) + labs(x = "Interval", y = "Average Number of Steps", title = "Average Number of Steps vs Interval on Weekdays") + theme(plot.title = element_text(hjust = 0.5))
g + geom_line(size = 1) + facet_wrap(weekday~., nrow = 2, ncol = 1) + labs(x = "Interval", y = "Average Number of Steps", title = "Average Number of Steps vs Interval on Weekdays") + theme(plot.title = element_text(hjust = 0.5))
g + geom_line() + facet_wrap(weekday~., nrow = 2, ncol = 1) + labs(x = "Interval", y = "Average Number of Steps", title = "Average Number of Steps vs Interval on Weekdays") + theme(plot.title = element_text(hjust = 0.5))
